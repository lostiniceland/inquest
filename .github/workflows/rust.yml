name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: "Build"
        run: rustup update --force && cargo build --verbose

      - name: "Run Unit-Tests"
        run: cargo test --lib --verbose

      - name: "Install Oracle Instant-Client"
        run: |
          curl -s -o /tmp/oracle-client.rpm https://download.oracle.com/otn_software/linux/instantclient/211000/oracle-instantclient-basiclite-21.1.0.0.0-1.x86_64.rpm
          sudo apt-get install -qq -o=Dpkg::Use-Pty=0 alien libaio1
          sudo alien -i /tmp/oracle-client.rpm

      - name: "Install Postgres Client"
        run: |
          sudo apt-get install -qq postgresql-client

      - name: "Install MSSQL Client"
        run: |
          curl -s https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl -s https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list
          sudo apt-get update -qq
          sudo apt-get install -qq mssql-tools unixodbc-dev
          echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc

      - name: "Startup Databases via Docker"
        run: docker-compose up -d

      - name: "Prepare Schemas For Tests"
        run: |
          sudo apt-get install -qq -o=Dpkg::Use-Pty=0 unzip openjdk-11-jdk
          curl -s -o /tmp/sqlcl.zip https://download.oracle.com/otn_software/java/sqldeveloper/sqlcl-21.1.1.113.1704.zip
          sudo unzip -qq /tmp/sqlcl.zip -d /opt
          cd tests
          echo "Prepare Oracle User"
          /opt/sqlcl/bin/sql -S sys/Oracle18@localhost:1521/XEPDB1 as sysdba @oracle_init-schema.sql test changeit
          echo "Prepare Oracle Testdata"
          /opt/sqlcl/bin/sql -S test/changeit@localhost:1521/XEPDB1 @testdata-oracle.sql
          echo "Prepare Postgres Testdata"
          psql postgresql://admin:changeit@localhost:5432/test -a -f testdata-postgres.sql
          echo "Prepare SQL Server Testdata"
          sqlcmd -S localhost -U SA -P 'changeit_C8' -i testdata-mssql.sql

      - name: "Run Integration-Tests"
        run: cargo test --test integration --verbose
